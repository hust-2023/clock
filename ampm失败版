`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 2025/03/09 23:51:27
// Design Name: 
// Module Name: try
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module clock(
input CP,CR,EN,stop,setclock,dangwei,adjmode,mode,seta,showmode,set,setmode,  //CR清零，EN熄屏，stop停止计时，setclock调整时钟开关，dangwei切换小时/时间调整，adjmode切换加减调整,mode切换显示时间、闹钟,seta调整闹钟开关,startalarm开启关闭闹钟,showmode12、24小时显示切换,set手动调整CP输入,setmode切换手动、自动调整
output [6:0] show,                                           
output [7:0] guan,
output zhengLED
    );//CP时钟，CR置零，EN停止显示，stop时钟停止，show显示的部分，guan显示的数码管
wire [7:0] miao,fen,hour;//存放秒、分、时
wire [3:0] number;//存放显示的数字
wire JIN1,JIN2;//JIN1秒进分，JIN2分进时(时钟模式下)
wire CP2,CP1,CP0;//CP1 1hz,CP0 1000hz,CP2 约3hz
wire psetclock,pseta;  //防抖动后的信号
assign CPCLOCK=(~psetclock&&setmode)?set:CP1;  //手动调整模式下，CPCLOCK和CPALARM由set开关产生
assign CPALARM=(~pseta&&setmode)?set:CP1;
assign JIN1=(miao[3:0]==4'b1001&&miao[7:4]==4'b0101)||((~setclock)&&mode);         //产生时钟进分信号，当在时钟模式下设置时或到59秒
assign JIN2=(fen[3:0]==4'b1001&&fen[7:4]==4'b0101&&miao[3:0]==4'b1001&&miao[7:4]==4'b0101)||((~setclock)&&mode);//产生时钟进时信号，当在时钟模式下设置时或到59分59秒
hz1000 U0(CP,CP0);   //产生1000hz
pinglv U1(CP0,CR,stop,CP1); //产生1hz
miao U2(CP1,CR,miao[7:4],miao[3:0]); //秒记录
fenzhong U3(CPCLOCK,CR,setclock,dangwei,adjmode,JIN1,fen[7:4],fen[3:0]); //分记录
hour U4(CPCLOCK,CR,setclock,dangwei,adjmode,JIN2,hour[7:4],hour[3:0]); //时记录
xianshi U5(number,show); //显示管控制
showtime U6(CP0,EN,mode,showmode,miao,fen,hour,alarmfen,alarmhour,number,guan);  //显示控制
zheng U10(CP2,CR,setclock,showmode,fen,miao,hour,zhengLED); //整点报时模块
zhengCP U7(CP0,CP2); //产生整点报时的CP信号,约3HZ
prevent U8(CP0,0,0,setclock,psetclock);//防抖动
prevent U9(CP0,0,0,seta,pseta); //防抖动
endmodule

module hz1000(
input CP,
output reg CLK=0
    );
reg [15:0] state;
always@(posedge CP)
begin
 if(state<49999) state<=state+1'b1;//由1MHZ脉冲产生1KHZ脉冲，每计数50000输出翻转一次
 else 
 begin
 CLK<=~CLK;
 state<=0;
 end
end
endmodule

module pinglv(
input CP,CR,stop,
output reg CLK
    );
reg [8:0] state;
always@(posedge CP,negedge CR)
begin
 if(~CR)
 begin
  CLK<=0;
  state<=0; 
 end
 else if(~stop)                  //stop可以控制使得停止计时（便于调整秒）
 begin
  CLK<=CLK;
  state<=state;
 end
 else if(state<499) state<=state+1'b1; //由1kHZ脉冲产生1HZ脉冲，每计数500输出翻转一次
 else 
 begin
 CLK<=~CLK;
 state<=0;
 end
end
endmodule

module miao(
input CP,CR,
output reg [3:0] fen1,fen0
    );
always @(posedge CP,negedge CR)   //1Hz脉冲控制，秒分情况+1
begin
if(~CR) 
 begin
 fen1<=0;
 fen0<=0;
 end
else if(fen1<6&&fen0<9) fen0<=fen0+1'b1;
else if(fen1<5&&fen0==9)
 begin
 fen0<=0;
 fen1<=fen1+1'b1;
 end
else
 begin
 fen1<=0;
 fen0<=0;
 end
end
endmodule

module fenzhong(
input CP,CR,setclock,dangwei,adjmode,JIN1,
output reg [3:0] fen1,fen0
    );
always @(posedge CP,negedge CR)
begin
if(~CR)                                       //清零
 begin
 fen1<=0;
 fen0<=0;
 end
 
else if(JIN1==0);                            //无进位信号保持

else if({setclock,dangwei,adjmode}==3'b000)  //在设置分钟模式且调整模式为减时，分钟分情况-1
begin
if(fen0>0) fen0<=fen0-1'b1;
else if(fen1>0&&fen0==0)
 begin
 fen0<=4'b1001;
 fen1<=fen1-1'b1;
 end
else
 begin
 fen1<=4'b0101;
 fen0<=4'b1001;
 end
end

else if(setclock==0&&dangwei==1);               //设置小时时，保持

else                                            //分钟分情况+1
begin
if(fen1<6&&fen0<9) fen0<=fen0+1'b1;
else if(fen1<5&&fen0==9)
 begin
 fen0<=0;
 fen1<=fen1+1'b1;
 end
else
 begin
 fen1<=0;
 fen0<=0;
 end
end
end
endmodule

module hour(
input CP,CR,setclock,dangwei,adjmode,JIN2,
output reg [3:0] hour1,hour0
    );
always @(posedge CP,negedge CR)
begin
if(~CR)               //清零
 begin
 hour1<=0;
 hour0<=0;
 end
 
else if(JIN2==0);      //无进位信号，保持

else if({setclock,dangwei,adjmode}==3'b010)//在设置模式且调整模式为减时，小时分情况-1
begin
if(hour0>0) hour0<=hour0-1'b1;
else if(hour1>0&&hour0==0)
 begin
 hour0<=4'b1001;
 hour1<=hour1-1'b1;
 end
else
 begin
 hour1<=4'b0010;
 hour0<=4'b0011;
 end
end

else if(setclock==0&&dangwei==0);    //设置分钟时，保持

else                                 //小时分情况+1
begin
if(hour1<2&&hour0<9) hour0<=hour0+1'b1;
else if(hour1<2&&hour0==9)
 begin
 hour0<=0;
 hour1<=hour1+1'b1;
 end
else if(hour1==2&&hour0<3) hour0<=hour0+1'b1;
else
 begin
 hour1<=0;
 hour0<=0;
 end
end
end
endmodule

module xianshi(          //显示译码，将BCD码转为数码管的数字
input [3:0] Q,
output reg[6:0] show=0
  );
always@(Q)
begin
case(Q)
4'h0:show<=7'b100_0000;
4'h1:show<=7'b111_1001;
4'h2:show<=7'b010_0100;
4'h3:show<=7'b011_0000;
4'h4:show<=7'b001_1001;
4'h5:show<=7'b001_0010;
4'h6:show<=7'b000_0010;
4'h7:show<=7'b111_1000;
4'h8:show<=7'b000_0000;
4'h9:show<=7'b001_0000;
4'ha:show<=7'b000_1000;
4'hb:show<=7'b000_1100;
default:show<=7'b111_1111;
endcase
end
endmodule

module showtime(
input CP0,EN,mode,showmode,
input [7:0]miao,fen,hour,alarmfen,alarmhour,
output reg[3:0]number=0,
output reg[7:0]guan=0
    );
integer k;
always@(posedge CP0)    //在1000Hz脉冲下，依次显示8个管子内容
begin

if(~EN) guan<=8'b1111_1111;   //熄屏

case(k)
0:begin 
number<=miao[3:0];
guan<=8'b1111_1011;
k<=k+1;
end

1:begin
number<=miao[7:4];
guan<=8'b1111_0111;
k<=k+1;
end

2:begin
number<=fen[3:0];
guan<=8'b1110_1111;
k<=k+1;
end

3:begin
number<=fen[7:4];
guan<=8'b1101_1111;
k<=k+1;
end

4:begin
if(showmode==1) number<=hour[3:0];
else
begin
if((hour[7:4]==1&&hour[3:0]>2)||(hour[7:4]==2&&hour[3:0]>=2)) number<=hour[3:0]-4'b0010;
else if(hour[7:4]==2&&hour[3:0]<2) number<=hour[3:0]+4'b1000;
else if(hour[7:4]==0&&hour[3:0]==0) number<=4'b0010;
else number<=hour[3:0];
end
guan<=8'b1011_1111;
k<=k+1;
end

5:begin
if(showmode==1) number<=hour[7:4];
else
begin
if((hour[7:4]==1&&hour[3:0]>2)||(hour[7:4]==2&&hour[3:0]>=2)) number<=hour[7:4]-4'b0001;
else if(hour[7:4]==2&&hour[3:0]<2) number<=0;
else if(hour[7:4]==0&&hour[3:0]==0) number<=4'b0001;
else number<=hour[7:4];
end
guan<=8'b0111_1111;
k<=k+1;
end

6:begin
if(showmode==1) k<=0;
else
begin
guan<=8'b1111_1110;
if(hour[7:4]==2||(hour[7:4]==1&&hour[3:0]>=2)) number<=4'b1011;
else number<=4'b1010;
k<=0;
end
end

default:k<=0;
endcase
end

endmodule

module zheng(
input CP2,CR,setclock,showmode,
input [7:0] fen,miao,hour,
output reg zhengLED
    );
integer k;
always@(posedge CP2,negedge CR)
begin
if(~CR||~setclock)
begin
k<=0;
zhengLED<=0;
end

else if(fen==0&&miao==0)               
k<=2;

else if(k>0)                          
begin
zhengLED<=~zhengLED;            
k<=k-1'b1;
end

else zhengLED<=0;

end

endmodule

module zhengCP(
input CP,
output reg CLK=0
    );
reg [7:0] state;
always@(posedge CP)
begin
 if(state<165) state<=state+1'b1;//由1MHZ脉冲产生1KHZ脉冲，每计数166输出翻转一次
 else 
 begin
 CLK<=~CLK;
 state<=0;
 end
end
endmodule

module prevent(    //RS触发器，防止抖动
input CP,R,S,CPCLOCK,
output reg pCPCLOCK=0
    );
always@(posedge CP)
begin
case({R,S})
2'b00:pCPCLOCK<=CPCLOCK;
2'b01:pCPCLOCK<=1'b1;
2'b10:pCPCLOCK<=0;
2'b11:pCPCLOCK<=1'bx;
endcase
end

endmodule

